{"version":3,"sources":["UsersList.js","App.js","reportWebVitals.js","index.js"],"names":["UsersList","user","useState","transactions","setTransactions","onClick","console","log","fetch","then","response","json","res","map","transaction","className","message","receiver","sender","App","users","setUsers","signatures","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAoCeA,MAlCf,SAAmBC,GAIf,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACI,qCACI,qBAAKC,QAbW,WACpBC,QAAQC,IAAIN,EAAKA,MACjBO,MAAM,4CAAD,OAA6CP,EAAKA,OAClDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAIR,EAAgBQ,EAAIT,kBASjC,kDACHA,EAAaU,KAAI,SAACC,GAAe,OAAO,+BACjC,oBAAIC,UAAU,eAAd,SAA8BD,EAAYE,UAC1C,oBAAID,UAAU,eAAd,SAA8BD,EAAYG,WAC1C,oBAAIF,UAAU,eAAd,SAA8BD,EAAYI,mBCgC3CC,MA1Df,WACE,MAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KA0BA,OACE,qCACE,wBAAQhB,QAZU,WACpBG,MAAM,0CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAIS,EAAST,EAAIU,gBAS5B,uBACA,wBAAQjB,QAPK,WACfgB,EAAS,KAMP,uBAGA,uBAAON,UAAU,0CAAjB,SACA,+BACE,oBAAIA,UAAU,eAAd,uBACA,oBAAIA,UAAU,eAAd,kFACA,oBAAIA,UAAU,eAAd,8DACA,oBAAIA,UAAU,eAAd,2CAGF,wBAAOA,UAAU,6CAAjB,UAECK,EAAMP,KAAI,SAACZ,GAAQ,OAAO,+BACzB,oBAAIc,UAAU,eAAd,SAA8Bd,IAC5B,oBAAIc,UAAU,eAAd,SAA6B,cAAC,EAAD,CAAWd,KAAMA,YAGlD,+BACA,oBAAIc,UAAU,eAAd,sCACI,oBAAIA,UAAU,eAAd,SAA6B,cAAC,EAAD,gBCzCxBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d642e441.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nfunction UsersList(user) {\r\n    // const [state, setState] = useState({\r\n    //     \"chain\": []\r\n    // })\r\n    const [transactions, setTransactions] = useState([])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //\r\n    // }, [state])\r\n    const getTransactions = () =>{\r\n        console.log(user.user)\r\n        fetch(`http://localhost:5000/parse_transactions/${user.user}`,)\r\n            .then(response => response.json())\r\n            .then(res => setTransactions(res.transactions))\r\n    }\r\n\r\n    // const nullUsers= () =>{\r\n    //     setTransactions([\"fdshgbvksujbasedrrrrrrrrrrrrrrrhgbeiogggggggggggggggggggggbyr\",\"2\",\"3\"])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div onClick={getTransactions}>Стадии</div>\r\n        {transactions.map((transaction)=>{return <tr>\r\n                <td className=\"u-table-cell\">{transaction.message}</td>\r\n                <td className=\"u-table-cell\">{transaction.receiver}</td>\r\n                <td className=\"u-table-cell\">{transaction.sender}</td>\r\n            </tr>\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UsersList;\r\n","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport UsersList from './UsersList';\nfunction App() {\n  const [users, setUsers] = useState([])\n\n  // useEffect(()=>{\n  //   let usersArray = []\n  //   const chain = state.chain\n  //   chain.forEach((item)=>{\n  //     item.transactions.forEach((transaction)=>{\n  //       const signature = transaction.signature\n  //       console.log(signature)\n  //       if (!usersArray.includes(signature)) {\n  //         usersArray.push(signature)\n  //       }\n  //     })\n  //   })\n  //   setUsers(usersArray)\n  // }, [state])\n  const getSignatures = () =>{\n    fetch('http://localhost:5000/parse_signatures',)\n        .then(response => response.json())\n        .then(res => setUsers(res.signatures))\n  }\n\n  const nullUsers= () =>{\n    setUsers([])\n  }\n\n  return (\n    <>\n      <button onClick={getSignatures}>Get users</button>\n      <button onClick={nullUsers}>set users</button>\n\n\n      <thead className=\"u-black u-table-header u-table-header-1\">\n      <tr>\n        <th className=\"u-table-cell\">Signature</th>\n        <th className=\"u-table-cell\"> номер заказа</th>\n        <th className=\"u-table-cell\">название</th>\n        <th className=\"u-table-cell\">Цена</th>\n      </tr>\n      </thead>\n      <tbody className=\"u-table-alt-palette-1-light-3 u-table-body\">\n\n      {users.map((user)=>{return <tr>\n        <td className=\"u-table-cell\">{user}</td>\n          <td className=\"u-table-cell\"><UsersList user={user} /></td>\n      </tr>\n      })}\n      <tr>\n      <td className=\"u-table-cell\">один</td>\n          <td className=\"u-table-cell\"><UsersList /></td>\n      </tr>\n\n      </tbody>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}