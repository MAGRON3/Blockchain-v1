{"version":3,"sources":["UsersList.js","App.js","reportWebVitals.js","index.js"],"names":["UsersList","useState","state","users","setUsers","useEffect","onClick","map","item","className","App","setState","usersArray","chain","forEach","transactions","transaction","signature","console","log","includes","push","fetch","then","response","json","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAmGeA,MAjGf,WACI,MAA0BC,mBAAS,CAC/B,MAAS,KADb,mBAAOC,EAAP,KAGA,GAHA,KAG0BD,mBAAS,KAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAkFA,OAhFAC,qBAAU,cAEP,CAACH,IA+EA,qCACI,qBAAKI,QANI,WACbF,EAAS,CAAC,gEAAgE,IAAI,OAK1E,oBACHD,EAAMI,KAAI,SAACC,GAAQ,OAAO,6BACnB,qBAAIC,UAAU,eAAd,UAA8BD,EAA9B,gBCuCDE,MAhIf,WACE,MAA0BT,mBAAS,CACjC,MAAS,KADX,mBAAOC,EAAP,KAAcS,EAAd,KAGA,EAA0BV,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KA6FA,OA3FAC,qBAAU,WACR,IAAIO,EAAa,GACHV,EAAMW,MACdC,SAAQ,SAACN,GACbA,EAAKO,aAAaD,SAAQ,SAACE,GACzB,IAAMC,EAAYD,EAAYC,UAC9BC,QAAQC,IAAIF,GACPL,EAAWQ,SAASH,IACvBL,EAAWS,KAAKJ,SAItBb,EAASQ,KACR,CAACV,IA+EF,qCACE,wBAAQI,QA/EK,WACfgB,MAAM,wCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAIf,EAASe,OA4ExB,uBACA,wBAAQpB,QAPK,WACfF,EAAS,KAMP,uBAGA,uBAAOK,UAAU,0CAAjB,SACA,+BACE,oBAAIA,UAAU,eAAd,uBACA,oBAAIA,UAAU,eAAd,kFACA,oBAAIA,UAAU,eAAd,8DACA,oBAAIA,UAAU,eAAd,2CAGF,wBAAOA,UAAU,6CAAjB,UAECN,EAAMI,KAAI,SAACC,GAAQ,OAAO,+BACzB,oBAAIC,UAAU,eAAd,SAA8BD,IAC5B,oBAAIC,UAAU,eAAd,SAA6B,cAAC,EAAD,YAGjC,+BACA,oBAAIA,UAAU,eAAd,sCACI,oBAAIA,UAAU,eAAd,SAA6B,cAAC,EAAD,gBC/GxBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.718fd76d.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nfunction UsersList() {\r\n    const [state, setState] = useState({\r\n        \"chain\": []\r\n    })\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [state])\r\n    const getChain = () =>{\r\n        fetch('http://localhost:5000/get_chain_json',)\r\n            .then(response => response.json())\r\n            .then(res => setState(res))\r\n        // const response = {\r\n        //   \"chain\": [\r\n        //     {\r\n        //       \"index\": 1,\r\n        //       \"previous_hash\": \"0\",\r\n        //       \"proof\": 44720,\r\n        //       \"timestamp\": \"2021-09-25 16:39:19.706007\",\r\n        //       \"transactions\": []\r\n        //     },\r\n        //     {\r\n        //       \"index\": 2,\r\n        //       \"previous_hash\": \"0000b65b03fe796f3972b7e1b3ff73e628c2334c7d299d4f5e064af8e1f2f7e2\",\r\n        //       \"proof\": 4538,\r\n        //       \"timestamp\": \"2021-09-25 16:40:02.340702\",\r\n        //       \"transactions\": [\r\n        //         {\r\n        //           \"message\": \"Hello\",\r\n        //           \"receiver\": \"Lars\",\r\n        //           \"sender\": \"Kate\",\r\n        //           \"signature\": \"KateSig\"\r\n        //         }\r\n        //       ]\r\n        //     },\r\n        //     {\r\n        //       \"index\": 3,\r\n        //       \"previous_hash\": \"0000ebad1ca44b44cb481c91e0601a0a5176d10383f2943ecd8c7f7575c0331e\",\r\n        //       \"proof\": 20359,\r\n        //       \"timestamp\": \"2021-09-25 16:40:40.421911\",\r\n        //       \"transactions\": [\r\n        //         {\r\n        //           \"message\": \"Hello\",\r\n        //           \"receiver\": \"Lars\",\r\n        //           \"sender\": \"Vlad\",\r\n        //           \"signature\": \"VladSig\"\r\n        //         },\r\n        //         {\r\n        //           \"message\": \"Hello\",\r\n        //           \"receiver\": \"Vlad\",\r\n        //           \"sender\": \"Lars\",\r\n        //           \"signature\": \"LarsSig\"\r\n        //         }\r\n        //       ]\r\n        //     },\r\n        //     {\r\n        //       \"index\": 4,\r\n        //       \"previous_hash\": \"00000db1033c9c76851177f93523913854b9681c39bcbd4faebc31a288bd8576\",\r\n        //       \"proof\": 43798,\r\n        //       \"timestamp\": \"2021-09-25 16:41:39.988971\",\r\n        //       \"transactions\": [\r\n        //         {\r\n        //           \"message\": \"Glad to see you\",\r\n        //           \"receiver\": \"Vlad\",\r\n        //           \"sender\": \"Lars\",\r\n        //           \"signature\": \"LarsSig\"\r\n        //         },\r\n        //         {\r\n        //           \"message\": \"Where are you\",\r\n        //           \"receiver\": \"Kate\",\r\n        //           \"sender\": \"Lars\",\r\n        //           \"signature\": \"LarsSig\"\r\n        //         }\r\n        //       ]\r\n        //     }\r\n        //   ],\r\n        //   \"length\": 4\r\n        // }\r\n        // setState(response)\r\n    }\r\n\r\n    const nullUsers= () =>{\r\n        setUsers([\"fdshgbvksujbasedrrrrrrrrrrrrrrrhgbeiogggggggggggggggggggggbyr\",\"2\",\"3\"])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div onClick={nullUsers}>button</div>\r\n        {users.map((item)=>{return <tr>\r\n                <td className=\"u-table-cell\">{item} </td>\r\n            </tr>\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UsersList;\r\n","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport UsersList from './UsersList';\nfunction App() {\n  const [state, setState] = useState({\n    \"chain\": []\n  })\n  const [users, setUsers] = useState([])\n\n  useEffect(()=>{\n    let usersArray = []\n    const chain = state.chain\n    chain.forEach((item)=>{\n      item.transactions.forEach((transaction)=>{\n        const signature = transaction.signature\n        console.log(signature)\n        if (!usersArray.includes(signature)) {\n          usersArray.push(signature)\n        }\n      })\n    })\n    setUsers(usersArray)\n  }, [state])\n  const getChain = () =>{\n    fetch('http://localhost:5000/get_chain_json',)\n        .then(response => response.json())\n        .then(res => setState(res))\n    // const response = {\n    //   \"chain\": [\n    //     {\n    //       \"index\": 1,\n    //       \"previous_hash\": \"0\",\n    //       \"proof\": 44720,\n    //       \"timestamp\": \"2021-09-25 16:39:19.706007\",\n    //       \"transactions\": []\n    //     },\n    //     {\n    //       \"index\": 2,\n    //       \"previous_hash\": \"0000b65b03fe796f3972b7e1b3ff73e628c2334c7d299d4f5e064af8e1f2f7e2\",\n    //       \"proof\": 4538,\n    //       \"timestamp\": \"2021-09-25 16:40:02.340702\",\n    //       \"transactions\": [\n    //         {\n    //           \"message\": \"Hello\",\n    //           \"receiver\": \"Lars\",\n    //           \"sender\": \"Kate\",\n    //           \"signature\": \"KateSig\"\n    //         }\n    //       ]\n    //     },\n    //     {\n    //       \"index\": 3,\n    //       \"previous_hash\": \"0000ebad1ca44b44cb481c91e0601a0a5176d10383f2943ecd8c7f7575c0331e\",\n    //       \"proof\": 20359,\n    //       \"timestamp\": \"2021-09-25 16:40:40.421911\",\n    //       \"transactions\": [\n    //         {\n    //           \"message\": \"Hello\",\n    //           \"receiver\": \"Lars\",\n    //           \"sender\": \"Vlad\",\n    //           \"signature\": \"VladSig\"\n    //         },\n    //         {\n    //           \"message\": \"Hello\",\n    //           \"receiver\": \"Vlad\",\n    //           \"sender\": \"Lars\",\n    //           \"signature\": \"LarsSig\"\n    //         }\n    //       ]\n    //     },\n    //     {\n    //       \"index\": 4,\n    //       \"previous_hash\": \"00000db1033c9c76851177f93523913854b9681c39bcbd4faebc31a288bd8576\",\n    //       \"proof\": 43798,\n    //       \"timestamp\": \"2021-09-25 16:41:39.988971\",\n    //       \"transactions\": [\n    //         {\n    //           \"message\": \"Glad to see you\",\n    //           \"receiver\": \"Vlad\",\n    //           \"sender\": \"Lars\",\n    //           \"signature\": \"LarsSig\"\n    //         },\n    //         {\n    //           \"message\": \"Where are you\",\n    //           \"receiver\": \"Kate\",\n    //           \"sender\": \"Lars\",\n    //           \"signature\": \"LarsSig\"\n    //         }\n    //       ]\n    //     }\n    //   ],\n    //   \"length\": 4\n    // }\n    // setState(response)\n  }\n\n  const nullUsers= () =>{\n    setUsers([])\n  }\n\n  return (\n    <>\n      <button onClick={getChain}>Get chain</button>\n      <button onClick={nullUsers}>set users</button>\n\n\n      <thead className=\"u-black u-table-header u-table-header-1\">\n      <tr>\n        <th className=\"u-table-cell\">Signature</th>\n        <th className=\"u-table-cell\"> номер заказа</th>\n        <th className=\"u-table-cell\">название</th>\n        <th className=\"u-table-cell\">Цена</th>\n      </tr>\n      </thead>\n      <tbody className=\"u-table-alt-palette-1-light-3 u-table-body\">\n\n      {users.map((item)=>{return <tr>\n        <td className=\"u-table-cell\">{item}</td>\n          <td className=\"u-table-cell\"><UsersList /></td>\n      </tr>\n      })}\n      <tr>\n      <td className=\"u-table-cell\">один</td>\n          <td className=\"u-table-cell\"><UsersList /></td>\n      </tr>\n\n      </tbody>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}